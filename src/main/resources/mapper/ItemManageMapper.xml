<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.csu.mypetstore.persistence.ItemManageMapper">
    <insert id="insertItem" parameterType="Item">
        insert into item
        (itemid, productid, listprice, unitcost, supplier, status, attr1, attr2, attr3, attr4, attr5)
        values (#{itemId}, #{productId}, #{listPrice}, #{unitCost},
                #{supplierId}, #{status}, #{attribute1}, #{attribute2},
                #{attribute3}, #{attribute4}, #{attribute5})
    </insert>

    <insert id="insertQuantity" parameterType="Item">
        insert into inventory
            (itemid, qty)
        values (#{itemId}, #{quantity})
    </insert>

    <update id="updateItem" parameterType="Item">
        update item
        set listprice = #{listPrice},
            attr1     = #{attribute1}
        where itemid = #{itemId}
    </update>

    <update id="updateInventoryQuantity" parameterType="Item">
        update inventory
        set qty = #{quantity}
        where itemid = #{itemId}
    </update>

    <select resultType="item" parameterType="string" id="getItemList">
        select i.itemid,
               listprice,
               unitcost,
               supplier    as supplierId,
               i.productid as "product.productId",
               name        as "product.name",
               descn       as "product.description",
               category    as "product.categoryId",
               status,
               attr1       as attribute1,
               attr2       as attribute2,
               attr3       as attribute3,
               attr4       as attribute4,
               attr5       as attribute5
               inventory.qty as quantity
        from item i,
             product p
             inventory
        where p.productid = i.productid
          and i.productid = inventory.itemid
    </select>

    <select resultType="item" parameterType="string" id="getItem">
        select i.itemid,
               listprice,
               unitcost,
               supplier    as supplierId,
               i.productid as "productId",
               name        as "product.name",
               descn       as "product.description",
               category    as "product.categoryId",
               status,
               attr1       as attribute1,
               attr2       as attribute2,
               attr3       as attribute3,
               attr4       as attribute4,
               attr5       as attribute5,
               qty         as quantity
        from item i,
             inventory v,
             product p
        where p.productid = i.productid
          and i.itemid = v.itemid
          and i.itemid = #{value}
    </select>

    <delete id="removeItemById">
        delete
        from item
        where itemid = #{itemId}
    </delete>

    <delete id="removeInventoryById" parameterType="string">
        delete
        from inventory
        where itemid = #{itemId}
    </delete>

    <select id="searchItemList" parameterType="string" resultType="Item">
        select i.itemid,
               listprice,
               unitcost,
               supplier    as supplierId,
               i.productid as "product.productId",
               name        as "product.name",
               descn       as "product.description",
               category    as "product.categoryId",
               status,
               attr1       as attribute1,
               attr2       as attribute2,
               attr3       as attribute3,
               attr4       as attribute4,
               attr5       as attribute5,
               qty         as quantity
        from item i,
             inventory v,
             product p
        where p.productid = i.productid
          and i.itemid = v.itemid
          and lower(i.itemid) like #{keyValue}
    </select>
</mapper>